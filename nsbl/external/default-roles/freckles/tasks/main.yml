---
# tasks file for dotfiles

# install the default package manager now in case git is missing
- name: install homebrew package manager if needed for installing 'git'
  include_role:
    name: geerlingguy.homebrew
  vars:
    homebrew_cask_apps: []
  when: '("git" | missing_from_path) and ((pkg_mgr is defined and pkg_mgr == "homebrew") or (ansible_os_family == "Darwin" and pkg_mgr is not defined) )'

- name: install nix package manager if needed for installing 'git'
  include_role:
    name: install-nix
  when: "pkg_mgr is defined and pkg_mgr == nix and 'git' | missing_from_path"

- name: install conda package manager if needed for installing 'git'
  include_role:
    name: install-conda
  when: "pkg_mgr is defined and pkg_mgr == conda and 'git' | missing_from_path"

- name: install git
  install:
    packages: git
    pkg_mgr: "{{ pkg_mgr | default('auto') }}"
  when: "'git' | missing_from_path"

- name: checkout dotfiles
  git:
    dest: "{{ item.dest }}"
    repo: "{{ item.repo }}"
  with_items:
    - "{{ freckles_repo | git_repo_filter }}"

# this doesn't work, bug in ansible, for now installing roles manually one by one
# - name: ensure all package managers are installed
#   include_role:
#     name: "{{ item }}"
#   with_items:
#     - "{{ freckles_repo | pkg_mgr_filter('install-') }}"

- name: install nix
  include_role:
    name: install-nix
  when: '("nix" in freckles_repo | pkg_mgr_filter) and ( "nix-env" | missing_from_path )'

- name: install conda
  include_role:
    name: install-conda
  when: '("conda" in freckles_repo | pkg_mgr_filter) and ( "conda" | missing_from_path )'

- name: install homebrew
  include_role:
    name: geerlingguy.homebrew
  vars:
    homebrew_cask_apps: []
  when: '("brew" | missing_from_path) and (("homebrew" in freckles_repo | pkg_mgr_filter) or (ansible_os_family == "Darwin" and pkg_mgr is not defined) )'

- name: install epel-release
  install:
    packages:
      - epel-release:
          pkgs:
            other: ignore

- name: install stow
  install:
    packages:
      - stow
    pkg_mgr: "{{ pkg_mgr | default(omit) }}"
  when: '"stow" | missing_from_path'

- name: stow folders
  stow:
    name: "{{ item.vars.folder_name }}"
    state: present
    source_dir: "{{ item.vars.dotfile_parent_path }}"
    target_dir: "{{ item.vars.stow_target_dir | default(stow_target_dir) }}"
  ignore_errors: "{{ ignore_errors | default(true) }}"
  when: item.vars.no_stow|default(false)|bool == false
  with_items:
    - "{{ freckles_repo | dotfile_repo_filter }}"

- name: install packages from dotfile folders
  install:
    packages: "{{ item }}"
    pkg_mgr: "{{ pkg_mgr | default(omit) }}"
  ignore_errors: "{{ ignore_errors | default(true) }}"
  with_items:
    - "{{ freckles_repo | dotfile_repo_filter }}"

- name: install additional packages
  install:
    packages: "{{ item }}"
    pkg_mgr: "{{ pkg_mgr | default(omit) }}"
  ignore_errors: "{{ ignore_errors | default(true) }}"
  with_items:
    - "{{ freckles_repo | additional_packages_filter }}"
